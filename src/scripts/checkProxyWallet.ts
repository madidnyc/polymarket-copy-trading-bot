import { ethers } from 'ethers';
import { ENV } from '../config/env';
import fetchData from '../utils/fetchData';

const PROXY_WALLET = ENV.PROXY_WALLET;
const PRIVATE_KEY = ENV.PRIVATE_KEY;
const RPC_URL = ENV.RPC_URL;

interface Activity {
  proxyWallet: string;
  timestamp: number;
  conditionId: string;
  type: string;
  size: number;
  usdcSize: number;
  transactionHash: string;
  price: number;
  asset: string;
  side: 'BUY' | 'SELL';
  title?: string;
}

const checkProxyWallet = async () => {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê PROXY WALLET –ò –û–°–ù–û–í–ù–û–ì–û –ö–û–®–ï–õ–¨–ö–ê\n');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º EOA (–æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ—à–µ–ª–µ–∫) –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    const wallet = new ethers.Wallet(PRIVATE_KEY);
    const eoaAddress = wallet.address;

    console.log('üìç –í–ê–®–ò –ê–î–†–ï–°–ê:\n');
    console.log(`   EOA (–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ—à–µ–ª–µ–∫):  ${eoaAddress}`);
    console.log(`   Proxy Wallet (–ö–æ–Ω—Ç—Ä–∞–∫—Ç): ${PROXY_WALLET}\n`);

    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ EOA
    console.log('üîé –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–û–°–¢–ò –ù–ê –û–°–ù–û–í–ù–û–ú –ö–û–®–ï–õ–¨–ö–ï (EOA):\n');
    const eoaActivityUrl = `https://data-api.polymarket.com/activity?user=${eoaAddress}&type=TRADE`;
    const eoaActivities: Activity[] = await fetchData(eoaActivityUrl);

    console.log(`   –ê–¥—Ä–µ—Å: ${eoaAddress}`);
    console.log(`   –°–¥–µ–ª–æ–∫: ${eoaActivities?.length || 0}`);
    console.log(`   –ü—Ä–æ—Ñ–∏–ª—å: https://polymarket.com/profile/${eoaAddress}\n`);

    if (eoaActivities && eoaActivities.length > 0) {
      const buyTrades = eoaActivities.filter(a => a.side === 'BUY');
      const sellTrades = eoaActivities.filter(a => a.side === 'SELL');
      const totalBuyVolume = buyTrades.reduce((sum, t) => sum + t.usdcSize, 0);
      const totalSellVolume = sellTrades.reduce((sum, t) => sum + t.usdcSize, 0);

      console.log('   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ EOA:');
      console.log(`      ‚Ä¢ –ü–æ–∫—É–ø–æ–∫: ${buyTrades.length} ($${totalBuyVolume.toFixed(2)})`);
      console.log(`      ‚Ä¢ –ü—Ä–æ–¥–∞–∂: ${sellTrades.length} ($${totalSellVolume.toFixed(2)})`);
      console.log(`      ‚Ä¢ –û–±—ä–µ–º: $${(totalBuyVolume + totalSellVolume).toFixed(2)}\n`);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–¥–µ–ª–∫–∏
      console.log('   üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–¥–µ–ª–∫–∏:');
      eoaActivities.slice(0, 3).forEach((trade, idx) => {
        const date = new Date(trade.timestamp * 1000);
        console.log(`      ${idx + 1}. ${trade.side} - ${trade.title || 'Unknown'}`);
        console.log(`         $${trade.usdcSize.toFixed(2)} @ ${date.toLocaleDateString()}`);
      });
      console.log('');
    } else {
      console.log('   ‚ùå –°–¥–µ–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ\n');
    }

    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ Proxy Wallet
    console.log('üîé –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–û–°–¢–ò –ù–ê PROXY WALLET (–ö–û–ù–¢–†–ê–ö–¢):\n');
    const proxyActivityUrl = `https://data-api.polymarket.com/activity?user=${PROXY_WALLET}&type=TRADE`;
    const proxyActivities: Activity[] = await fetchData(proxyActivityUrl);

    console.log(`   –ê–¥—Ä–µ—Å: ${PROXY_WALLET}`);
    console.log(`   –°–¥–µ–ª–æ–∫: ${proxyActivities?.length || 0}`);
    console.log(`   –ü—Ä–æ—Ñ–∏–ª—å: https://polymarket.com/profile/${PROXY_WALLET}\n`);

    if (proxyActivities && proxyActivities.length > 0) {
      const buyTrades = proxyActivities.filter(a => a.side === 'BUY');
      const sellTrades = proxyActivities.filter(a => a.side === 'SELL');
      const totalBuyVolume = buyTrades.reduce((sum, t) => sum + t.usdcSize, 0);
      const totalSellVolume = sellTrades.reduce((sum, t) => sum + t.usdcSize, 0);

      console.log('   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Proxy Wallet:');
      console.log(`      ‚Ä¢ –ü–æ–∫—É–ø–æ–∫: ${buyTrades.length} ($${totalBuyVolume.toFixed(2)})`);
      console.log(`      ‚Ä¢ –ü—Ä–æ–¥–∞–∂: ${sellTrades.length} ($${totalSellVolume.toFixed(2)})`);
      console.log(`      ‚Ä¢ –û–±—ä–µ–º: $${(totalBuyVolume + totalSellVolume).toFixed(2)}\n`);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–¥–µ–ª–∫–∏
      console.log('   üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–¥–µ–ª–∫–∏:');
      proxyActivities.slice(0, 3).forEach((trade, idx) => {
        const date = new Date(trade.timestamp * 1000);
        console.log(`      ${idx + 1}. ${trade.side} - ${trade.title || 'Unknown'}`);
        console.log(`         $${trade.usdcSize.toFixed(2)} @ ${date.toLocaleDateString()}`);
      });
      console.log('');
    } else {
      console.log('   ‚ùå –°–¥–µ–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ proxy wallet\n');
    }

    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É –∞–¥—Ä–µ—Å–∞–º–∏
    console.log('üîó –°–í–Ø–ó–¨ –ú–ï–ñ–î–£ –ê–î–†–ï–°–ê–ú–ò:\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ proxyWallet –≤ —Å–¥–µ–ª–∫–∞—Ö
    if (eoaActivities && eoaActivities.length > 0) {
      const sampleTrade = eoaActivities[0];
      console.log(`   EOA —Å–¥–µ–ª–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç proxyWallet: ${sampleTrade.proxyWallet || 'N/A'}`);
    }

    if (proxyActivities && proxyActivities.length > 0) {
      const sampleTrade = proxyActivities[0];
      console.log(`   Proxy —Å–¥–µ–ª–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç proxyWallet: ${sampleTrade.proxyWallet || 'N/A'}`);
    }

    console.log('\n   üí° –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢:\n');
    console.log('   1. EOA (Externally Owned Account) - –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ—à–µ–ª–µ–∫');
    console.log('      ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–ª—é—á–æ–º');
    console.log('      ‚Ä¢ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    console.log('      ‚Ä¢ –ù–ï —Ö—Ä–∞–Ω–∏—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ Polymarket\n');

    console.log('   2. Proxy Wallet - —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç –∫–æ—à–µ–ª–µ–∫');
    console.log('      ‚Ä¢ –°–æ–∑–¥–∞–µ—Ç—Å—è Polymarket –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    console.log('      ‚Ä¢ –•—Ä–∞–Ω–∏—Ç USDC –∏ —Ç–æ–∫–µ–Ω—ã –ø–æ–∑–∏—Ü–∏–π');
    console.log('      ‚Ä¢ –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–¥–µ–ª–∫–∏ –æ—Ç –∏–º–µ–Ω–∏ EOA');
    console.log('      ‚Ä¢ –°–≤—è–∑–∞–Ω —Å EOA —á–µ—Ä–µ–∑ –ø–æ–¥–ø–∏—Å—å\n');

    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

    // 5. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É
    console.log('‚ùì –ü–û–ß–ï–ú–£ –ù–ï–¢ –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ù–ê –ü–†–û–§–ò–õ–ï?\n');

    const eoaHasTrades = eoaActivities && eoaActivities.length > 0;
    const proxyHasTrades = proxyActivities && proxyActivities.length > 0;

    if (!eoaHasTrades && proxyHasTrades) {
      console.log('   üéØ –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê!\n');
      console.log('   –í—Å–µ —Å–¥–µ–ª–∫–∏ –∏–¥—É—Ç —á–µ—Ä–µ–∑ Proxy Wallet, –Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ Polymarket');
      console.log('   –º–æ–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ (EOA).\n');

      console.log('   üìä –ì–î–ï –°–ú–û–¢–†–ï–¢–¨ –°–¢–ê–¢–ò–°–¢–ò–ö–£:\n');
      console.log(`   ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ø—Ä–æ—Ñ–∏–ª—å (—Å —Ç–æ—Ä–≥–æ–≤–ª–µ–π):`);
      console.log(`      https://polymarket.com/profile/${PROXY_WALLET}\n`);

      console.log(`   ‚ùå –ü—Ä–æ—Ñ–∏–ª—å EOA (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º):`);
      console.log(`      https://polymarket.com/profile/${eoaAddress}\n`);

      console.log('   üí° –†–ï–®–ï–ù–ò–ï:\n');
      console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å Proxy Wallet –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:');
      console.log(`   ${PROXY_WALLET}\n`);

    } else if (eoaHasTrades && !proxyHasTrades) {
      console.log('   –°–¥–µ–ª–∫–∏ –∏–¥—É—Ç —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ—à–µ–ª–µ–∫ (EOA)');
      console.log('   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–µ EOA\n');
    } else if (eoaHasTrades && proxyHasTrades) {
      console.log('   –°–¥–µ–ª–∫–∏ –µ—Å—Ç—å –Ω–∞ –æ–±–æ–∏—Ö –∞–¥—Ä–µ—Å–∞—Ö!');
      console.log('   –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–∞–∑–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏\n');
    } else {
      console.log('   ‚ùå –°–¥–µ–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–º –∞–¥—Ä–µ—Å–µ\n');
    }

    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ blockchain
    console.log('üîó –ü–†–û–í–ï–†–ö–ê –í –ë–õ–û–ö–ß–ï–ô–ù–ï:\n');
    console.log(`   EOA (–æ—Å–Ω–æ–≤–Ω–æ–π):`);
    console.log(`   https://polygonscan.com/address/${eoaAddress}\n`);
    console.log(`   Proxy Wallet (–∫–æ–Ω—Ç—Ä–∞–∫—Ç):`);
    console.log(`   https://polygonscan.com/address/${PROXY_WALLET}\n`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∞–¥—Ä–µ—Å–∞ —á–µ—Ä–µ–∑ RPC
    try {
      const provider = new ethers.providers.JsonRpcProvider(RPC_URL);

      const eoaCode = await provider.getCode(eoaAddress);
      const proxyCode = await provider.getCode(PROXY_WALLET);

      console.log('   üîç –¢–∏–ø –∞–¥—Ä–µ—Å–æ–≤:');
      console.log(`      EOA: ${eoaCode === '0x' ? '‚úÖ –û–±—ã—á–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ (EOA)' : '‚ö†Ô∏è  –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç'}`);
      console.log(`      Proxy: ${proxyCode === '0x' ? '‚ùå –û–±—ã—á–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ (–æ—à–∏–±–∫–∞!)' : '‚úÖ –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)'}\n`);
    } catch (error) {
      console.log('   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø –∞–¥—Ä–µ—Å–æ–≤ —á–µ—Ä–µ–∑ RPC\n');
    }

    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

    console.log('‚úÖ –ò–¢–û–ì:\n');
    console.log('   –í–∞—à –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PROXY_WALLET –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏.');
    console.log('   –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ!\n');
    console.log('   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞:');
    console.log(`   üîó https://polymarket.com/profile/${PROXY_WALLET}\n`);
    console.log('   –ï—Å–ª–∏ —Ç–∞–º –≤—Å–µ –µ—â–µ –Ω–µ—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤, —ç—Ç–æ –±–∞–≥ Polymarket UI.\n');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
};

checkProxyWallet();

